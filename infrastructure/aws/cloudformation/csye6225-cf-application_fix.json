{
	"Description": "NetworkStack",
	"Resources": {
		"WebServerSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"Tags": [{
					"Key": "Web",
					"Value": "web"
				}],
				"GroupName": "csye6225-webapp",
				"GroupDescription": "Enable HTTP access via port 80, SSH access via port 22, HTTPS access via port 443",
				"VpcId": {
					"Ref": "vpcId"
				},
				"SecurityGroupIngress": [{
					"IpProtocol": "tcp",
					"FromPort": "22",
					"ToPort": "22",
					"CidrIp": "0.0.0.0/0"
				},{
					"IpProtocol": "tcp",
					"FromPort": "80",
					"ToPort": "80",
					"CidrIp": "0.0.0.0/0"
				},{
					"IpProtocol": "tcp",
					"FromPort": "443",
					"ToPort": "443",
					"CidrIp": "0.0.0.0/0"
				}
				]
			}
		},
		"DBSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"VpcId" : {
					"Ref" : "vpcId"
				},
				"Tags": [{
					"Key": "dbs",
					"Value": "dbs"
				}],
				"GroupDescription": "Enable HTTP access via port 3306 port 3306 for MySQL or whatever port only from the webapp security group.",
				"SecurityGroupIngress": [{
					"IpProtocol": "tcp",
					"FromPort": "3306",
					"ToPort": "3306",
					"SourceSecurityGroupId": {
						"Ref": "WebServerSecurityGroup"
					}
				}]
			}
		},

		"EC2Instance": {
			"Type" : "AWS::EC2::Instance",
			"Properties" : {
				"ImageId" : {"Ref" : "ImageId"},
				"InstanceType" : "t2.micro",
				"DisableApiTermination": "false",
				"SecurityGroupIds": [{
					"Ref" : "WebServerSecurityGroup"
				}],
				"SubnetId" : {"Ref": "publicsubnet1"},
				"Tags": [{
					"Key": "ec2",
					"Value": "ec2"
				}],
				"BlockDeviceMappings": [{
					"DeviceName" : "/dev/sdm",
					"Ebs": {
						"VolumeType": "gp2",
						"VolumeSize": "20",
						"DeleteOnTermination" : "true"
					}
				}],


				"UserData" : {
					"Fn::Base64": {
						"Fn::Join": [
							"",
							[
                        "#!/bin/bash\n",
                        "sudo apt-get update -y\n",
                        "sudo apt-get install python -y\n",
                        "curl https://s3.amazonaws.com//aws-cloudwatch/downloads/latest/awslogs-agent-setup.py -O\n",
                        "chmod +x ./awslogs-agent-setup.py\n",
                        "sudo ./awslogs-agent-setup.py -n -r us-east-1 -c s3://myawsbucket/my-config-file\n",
                        "sudo apt-get update \n",
                        "sudo apt-get -y install tomcat8\n",
                        "sudo apt-get update\n",
                        "sudo apt-get -y install ruby\n",
                        "sudo apt-get install wget\n",
                        "cd /home/ubuntu\n",
                        "wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install\n",
                        "chmod +x ./install\n",
                        "sudo ./install auto\n",
                        "sudo service codedeploy-agent start\n",
                        "sudo apt-get -y install mysql-client-core-5.7"
							]
						]
					}
				}
			}
		},
		"DynamoDBTable": {
			"Type": "AWS::DynamoDB::Table",
			"Properties": {
				"AttributeDefinitions": [{
					"AttributeName": "id",
					"AttributeType": "S"
				}],
				"KeySchema": [{
					"AttributeName": "id",
					"KeyType": "HASH"
				}],
				"ProvisionedThroughput" : {
					"ReadCapacityUnits" : "5",
					"WriteCapacityUnits" : "5"
				},
				"TableName": "csye6225"
			}
		},
		"DBSubnetGroup":{
			"Type" : "AWS::RDS::DBSubnetGroup",
			"Properties" : {
				"DBSubnetGroupDescription" : "Subnet for RDS instances",
				"DBSubnetGroupName" : "SubnetGrouop",
				"SubnetIds" : [{"Ref": "publicsubnet1"},
					{"Ref": "publicsubnet2"}
				]
			}
		},
		"RDSInstance":{
			"Type" : "AWS::RDS::DBInstance",
			"Properties" :{
				"AllocatedStorage" : "100",
				"DBName": "csye6225",
				"Engine" : "MySQL",
				"DBInstanceClass" : "db.t2.medium",
				"DBInstanceIdentifier" : "csye6225-spring2019",
				"VPCSecurityGroups" : [{
					"Ref" : "DBSecurityGroup"
				}] ,
				"MasterUsername" : "csye6225master",
				"MasterUserPassword" : "csye6225password",
				"MultiAZ" : "false",
				"PubliclyAccessible" : "true",
				"DBSubnetGroupName" : {
					"Ref": "DBSubnetGroup"
				}
			}
		}
	},
	"Parameters": {
		"vpcId": {
			"Type": "String"
		},
		"ImageId" : {
			"Type": "String"
		},
		"publicsubnet1": {
			"Type": "String"
		},
		"publicsubnet2": {
			"Type": "String"
		},
		"publicsubnet3": {
			"Type": "String"
		},
		"circleci": {
			"Type": "String"
		}
	}
}
