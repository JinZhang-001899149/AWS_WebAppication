{
	"Description": "NetworkStack",
	"Resources": {
		"WebServerSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"Tags": [{
					"Key": "Web",
					"Value": "web"
				}],
				"GroupName": "csye6225-webapp",
				"GroupDescription": "Enable HTTP access via port 80, SSH access via port 22, HTTPS access via port 443",
				"VpcId": {
					"Ref": "vpcId"
				},
				"SecurityGroupIngress": [{
					"IpProtocol": "tcp",
					"FromPort": "22",
					"ToPort": "22",
					"CidrIp": "0.0.0.0/0"
				},{
					"IpProtocol": "tcp",
					"FromPort": "80",
					"ToPort": "80",
					"CidrIp": "0.0.0.0/0"
				},{
					"IpProtocol": "tcp",
					"FromPort": "443",
					"ToPort": "443",
					"CidrIp": "0.0.0.0/0"
				}
				]
			}
		},
		"DBSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"VpcId" : {
					"Ref" : "vpcId"
				},
				"Tags": [{
					"Key": "dbs",
					"Value": "dbs"
				}],
				"GroupDescription": "Enable HTTP access via port 3306 port 3306 for MySQL or whatever port only from the webapp security group.",
				"SecurityGroupIngress": [{
					"IpProtocol": "tcp",
					"FromPort": "3306",
					"ToPort": "3306",
					"SourceSecurityGroupId": {
						"Ref": "WebServerSecurityGroup"
					}
				}]
			}
		},

		"EC2Instance": {
			"Type" : "AWS::EC2::Instance",
			"Properties" : {
				"ImageId" : {"Ref" : "ImageId"},
				"InstanceType" : "t2.micro",
				"DisableApiTermination": "false",
				"SecurityGroupIds": [{
					"Ref" : "WebServerSecurityGroup"
				}],
				"SubnetId" : {"Ref": "publicsubnet1"},
				"Tags": [{
					"Key": "ec2",
					"Value": "ec2"
				}],
				"BlockDeviceMappings": [{
					"DeviceName" : "/dev/sdm",
					"Ebs": {
						"VolumeType": "gp2",
						"VolumeSize": "20",
						"DeleteOnTermination" : "true"
					}
				}]
			}
		},
		"DynamoDBTable": {
			"Type": "AWS::DynamoDB::Table",
			"Properties": {
				"AttributeDefinitions": [{
					"AttributeName": "id",
					"AttributeType": "S"
				}],
				"KeySchema": [{
					"AttributeName": "id",
					"KeyType": "HASH"
				}],
				"ProvisionedThroughput" : {
					"ReadCapacityUnits" : "5",
					"WriteCapacityUnits" : "5"
				},
				"TableName": "csye6225"
			}
		},
		"DBSubnetGroup":{
			"Type" : "AWS::RDS::DBSubnetGroup",
			"Properties" : {
				"DBSubnetGroupDescription" : "Subnet for RDS instances",
				"DBSubnetGroupName" : "SubnetGrouop",
				"SubnetIds" : [{"Ref": "publicsubnet1"},
					{"Ref": "publicsubnet2"}
				]
			}
		},
		"RDSInstance":{
			"Type" : "AWS::RDS::DBInstance",
			"Properties" :{
				"AllocatedStorage" : "100",
				"DBName": "csye6225",
				"Engine" : "MySQL",
				"DBInstanceClass" : "db.t2.medium",
				"DBInstanceIdentifier" : "csye6225-spring2019",
				"VPCSecurityGroups" : [{
					"Ref" : "DBSecurityGroup"
				}] ,
				"MasterUsername" : "csye6225master",
				"MasterUserPassword" : "csye6225password",
				"MultiAZ" : "false",
				"PubliclyAccessible" : "true",
				"DBSubnetGroupName" : {
					"Ref": "DBSubnetGroup"
				}
			}
		},


		"CodeDeployEC2ServiceRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"RoleName": "CodeDeployEC2ServiceRole",
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": {
								"Service": [
									"ec2.amazonaws.com"
								]
							},
							"Action": [
								"sts:AssumeRole"
							]
						}
					]
				}
			}
		},


		"CodeDeployServiceRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"RoleName": "CodeDeployServiceRole",
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": {
								"Service": [
									"codedeploy.amazonaws.com"
								]
							},
							"Action": [
								"sts:AssumeRole"
							]
						}
					]
				},
				"ManagedPolicyArns": [
					"arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole"
				]
			}
		},
		"circleciec2ami": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Action" : [
							"ec2:AttachVolume",
							"ec2:AuthorizeSecurityGroupIngress",
							"ec2:CopyImage",
							"ec2:CreateImage",
							"ec2:CreateKeypair",
							"ec2:CreateSecurityGroup",
							"ec2:CreateSnapshot",
							"ec2:CreateTags",
							"ec2:CreateVolume",
							"ec2:DeleteKeyPair",
							"ec2:DeleteSecurityGroup",
							"ec2:DeleteSnapshot",
							"ec2:DeleteVolume",
							"ec2:DeregisterImage",
							"ec2:DescribeImageAttribute",
							"ec2:DescribeImages",
							"ec2:DescribeInstances",
							"ec2:DescribeInstanceStatus",
							"ec2:DescribeRegions",
							"ec2:DescribeSecurityGroups",
							"ec2:DescribeSnapshots",
							"ec2:DescribeSubnets",
							"ec2:DescribeTags",
							"ec2:DescribeVolumes",
							"ec2:DetachVolume",
							"ec2:GetPasswordData",
							"ec2:ModifyImageAttribute",
							"ec2:ModifyInstanceAttribute",
							"ec2:ModifySnapshotAttribute",
							"ec2:RegisterImage",
							"ec2:RunInstances",
							"ec2:StopInstances",
							"ec2:TerminateInstances"
						],
						"Resource" : "*"
					}]
				},
				"PolicyName": "circleci-ec2-ami",
				"Users":[
					{
						"Ref": "circleci"
					}
				]
			}
		},
		"CodeDeployEC2S3Policy": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Action": [
								"s3:Get*",
								"s3:List*"
							],
							"Effect": "Allow",
							"Resource": [
								{
									"Ref": "s3bucket"
								}
							]
						}
					]
				},
				"PolicyName": "CodeDeploy-EC2-S3Policy",
				"Roles":[
					{
						"Ref":"CodeDeployEC2ServiceRole"
					}
				]
			}
		},
		"CircleCIUploadToS3": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Action": [
								"s3:PutObject"
							],
							"Resource":
								[
									{
										"Ref": "s3bucket"
									}
								]
						}
					]
				},
				"PolicyName": "CircleCI-Upload-To-S3",
				"Users":[
					{
						"Ref": "circleci"
					}
				]
			}
		},
		"CirlceCICodeDeploy": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Action": [
								"codedeploy:RegisterApplicationRevision",
								"codedeploy:GetApplicationRevision"
							],
							"Resource": [
								{
									"Fn::Join": [
										"",
										[
											"arn:aws:codedeploy:",
											{
												"Ref": "AWS::Region"
											},
											":",
											{
												"Ref": "AWS::AccountId"
											},
											":deploymentconfig:CodeDeployDefault.HalfAtATime"
										]
									]
								}
							]
						},
						{
							"Effect": "Allow",
							"Action": [
								"codedeploy:CreateDeployment",
								"codedeploy:GetDeployment"
							],
							"Resource": [
								"*"
							]
						},
						{
							"Effect": "Allow",
							"Action": [
								"codedeploy:GetDeploymentConfig"
							],
							"Resource": [
								{
									"Fn::Join": [
										"",
										[
											"arn:aws:codedeploy:",
											{
												"Ref": "AWS::Region"
											},
											":",
											{
												"Ref": "AWS::AccountId"
											},
											":deploymentconfig:CodeDeployDefault.OneAtATime"
										]
									]
								},
								{
									"Fn::Join": [
										"",
										[
											"arn:aws:codedeploy:",
											{
												"Ref": "AWS::Region"
											},
											":",
											{
												"Ref": "AWS::AccountId"
											},
											":deploymentconfig:CodeDeployDefault.HalfAtATime"
										]
									]
								},
								{
									"Fn::Join": [
										"",
										[
											"arn:aws:codedeploy:",
											{
												"Ref": "AWS::Region"
											},
											":",
											{
												"Ref": "AWS::AccountId"
											},
											":deploymentconfig:CodeDeployDefault.AllAtOnce"
										]
									]
								}

							]
						}
					]
				},
				"PolicyName": "CirlceCI-Code-Deploy",
				"Users": [
					{
						"Ref": "circleci"
					}
				]
			}
		}

	},
	"Parameters": {
		"vpcId": {
			"Type": "String"
		},
		"ImageId" : {
			"Type": "String"
		},
		"publicsubnet1": {
			"Type": "String"
		},
		"publicsubnet2": {
			"Type": "String"
		},
		"publicsubnet3": {
			"Type": "String"
		},
		"circleci": {
			"Type": "String"
		}
	}
}
